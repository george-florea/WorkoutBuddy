@using WorkoutBuddy.BusinessLogic.Implementation.Exercises.Models
@using WorkoutBuddy.Common.DTOs
@model List<ExerciseAsListItemModel>
@inject CurrentUserDto CurrentUser
@{
    ViewData["Title"] = "Exercises";
}

<div class="container">
    <div class="row">
        <div class="col-sm">
            <h1>Exercises:</h1>
        </div>
        <div class="col-sm"> </div>
        <div class="col-sm"></div>
        <div class="col-sm"> </div>
        <div class="col-sm">
            <a type="button" class="btn btn-lg" style="background-color: #d4f0a5" asp-controller="Exercise" asp-action="AddExercise">Add new exercise</a>
        </div>

    </div>

    <hr />

    @if (Model.Count == 0)
    {
        <div class="d-flex flex-column justify-content-center">
            <h1 class="text-warning text-center">There are no available exercises</h1>
            <a class="btn btn-outline-secondary" style="width:20%; align-self:center" asp-controller="Home" asp-action="Index">Back to Home</a>
        </div>
    }
    else
    {
        <div class="row  mb-5">
            <div class="col"></div>
            <div class="col w-50 d-inline-flex justify-content-between" id="nav">
                @if (Int32.Parse(ViewData["Index"].ToString()) != 0)
                {
                    <a asp-controller="Exercise" asp-action="ExercisesList" asp-route-index="@(Int32.Parse(ViewData["Index"].ToString()) - 1)" id="prev" class="btn btn-outline-secondary">Prev</a>
                }

                @for (var i = 0; i < Int32.Parse(ViewData["NoOfPages"].ToString()); i++)
                {
                    @if (i == Int32.Parse(ViewData["Index"].ToString()))
                    {
                        <a asp-controller="Exercise" asp-action="ExercisesList" asp-route-index="@i" type="submit" id="page_@i" class="btn btn-secondary">@(i+1)</a>
                    }
                    else
                    {
                        <a asp-controller="Exercise" asp-action="ExercisesList" asp-route-index="@i" id="page_@i" class="btn btn-outline-secondary">@(i+1)</a>
                    }
                }

                @if (Int32.Parse(ViewData["Index"].ToString()) != Int32.Parse(ViewData["NoOfPages"].ToString()) - 1)
                {
                    <a asp-controller="Exercise" asp-action="ExercisesList" asp-route-index="@(Int32.Parse(ViewData["Index"].ToString()) + 1)" id="prev" class="btn btn-outline-secondary">Next</a>
                }
            </div>
            <div class="col"></div>
        </div>


        <div class="row">
            @foreach (var exercise in Model)
            {
                <div class="col-md-4">
                    <div class="card mb-4 box-shadow">
                        <img class="card-img-top" style="height: 225px; width: 100%; display: block;" src="/Image/GetImgContent?id=@exercise.IdImage" />
                        <div class="card-body" style="background-color: #393E46 ; color:#efefef ">
                            <h5 class="card-title">@exercise.Name</h5>
                            <p class="card-text">Exercise type: @exercise.ExerciseType</p>
                            <div class="d-flex justify-content-evenly align-items-center">
                                <a type="button" class="btn btn btn-secondary rounded-pill d-flex flex-row justify-content-between" style="width:100px" asp-controller="Exercise" asp-action="ViewExercise" asp-route-id="@exercise.ExerciseId">
                                    <div class="rounded-circle bg-white" style="width:37%; color:black; margin-right: 0.7rem;">
                                        <i class="fa-solid fa-eye"></i>
                                    </div>
                                    <div>
                                        View
                                    </div>
                                </a>
                                @if (CurrentUser.Roles.Contains("Admin"))
                                {
                                    <a type="button" class="btn btn-warning rounded-pill d-flex flex-row" style="width:100px" asp-action="EditExercise" asp-route-id="@exercise.ExerciseId">
                                        <div class="rounded-circle bg-white" style="width:37%; margin-right: 1rem">
                                            <i class="fa-solid fa-pen-to-square"></i>
                                        </div>
                                        <div>
                                            Edit
                                        </div>
                                    </a>
                                    <form asp-controller="Exercise" asp-action="DeleteExercise" asp-route-id="@exercise.ExerciseId" onclick="return confirm('Are you sure you want to delete this?')">
                                        <button type="submit" class="btn btn-danger rounded-pill d-flex flex-row justify-content-between" style="width:100px">
                                            <div class="rounded-circle bg-white" style="width:45%; color:black">
                                                <i class="fa-solid fa-trash"></i> 
                                            </div>
                                            <div>
                                                Delete
                                            </div>
                                        </button>
                                    </form>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Scripts{
    <script>
        let page = 0;
        @for (var i = 0; i < Int32.Parse(ViewData["NoOfPages"].ToString()); i++)
        {
            <text>
                page = document.getElementById('page_@i')
            page.onclick = e => {
                let nav = document.getElementById('nav');

                for (let i in nav.children) {
                    if (nav.children[i].nodeType == 1) {
                        nav.children[i].classList.remove('btn-secondary')
                        nav.children[i].classList.add('btn-outline-secondary')
                    }
                }

                e.currentTarget.classList.remove('btn-outline-secondary')
                e.currentTarget.classList.add('btn-secondary')
                return true;
            }
            </text>
        }
    </script>
    }
