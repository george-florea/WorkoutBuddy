@using WorkoutBuddy.BusinessLogic.Implementation.UserSplitColection.Models
@model HistoryModel
@{
    ViewData["Title"] = "Workout history";
    var datesNo = Int32.Parse(ViewData["DatesNo"].ToString());
    var index = 0;
    var pagesNo = 0;
    if (Model.Dates != null)
    {
        pagesNo = (@Model.Dates.Count - 1) / datesNo;
    }
}

<style>
    .listItem:last-of-type{
        margin-bottom: 0;
    }
    .listItem::before {
        margin-left: 1rem;
        content: '';
        display: inline-block;
        width: 10px;
        height: 10px;
        border-radius: 7.5px;
        border: 1px solid #393E46;
    }

    .tab {
        background-color: white;
        border-radius: 2rem;
        padding: 2rem;
    }
    .tabBtnActive{
        background-color: white;
        border: none;
        width: 10rem;
        border-bottom: 4px solid #d4f0a5;
        border-radius: 0;
    }
    .tabBtnActive:hover{
        cursor: default;
    }

    .tabBtn{
        background-color: #f1ffd9;
        border: none;
        width: 10rem;
        border-radius: 0;
    }
    .tabBtn:hover{
        background-color: #d4f0a5;
    }

    .dateBtn{
        background-color: #efefef;
        border: none;
        width: 7rem;
        border-radius: 0;
    }

    .dateBtnActive{
        background-color: #d4f0a5;
        border: none;
        width: 7rem;
        border-radius: 0;
    }

    .dateBtn:hover{
        background-color: #f1ffd9;
    }

    .dateBtnActive:hover{
        cursor: default;
    }

    .navBtn{
        background-color: #efefef;
        border: none;
        width: 7rem;
        border-radius: 0;
    }

    .navBtn:hover:not([disabled]) {
        background-color: #d4f0a5;
    }
</style>

<div class="container" style="height:100%">
    <h1>Your progress</h1>

    <hr />


    @if (@Model.Dates == null)
    {
        <div class="d-flex flex-column justify-content-center">
            <h1 class="text-warning text-center">You didn't record any progress for this workout!</h1>
            <div class="row">
                <div class="col"></div>
                <div class="col">
                    <a class="text-secondary btn btn-outline-warning w-100" asp-controller="UserSplit" asp-action="AddProgress" asp-route-id="@Model.WorkoutId">Click here to add progress</a>
                </div>
                <div class="col"></div>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col"></div>
            <div class="col">
                <div class="d-flex justify-content-center" style="height:3rem">
                     <button type="button" class="tabBtnActive" id="info">Progress info</button>
                     <button type="button" class="tabBtn" id="chart">Progress chart</button>
                </div>  
            </div>
            <div class="col"></div>
        </div>

        <div class="container tab" id="infoContainer">
            <div class="nav d-flex justify-content-center" id="dateNav" style="height:2.5rem">
                <button type="button" id="prev" class="navBtn" disabled>Prev week</button>

                @for (var i = 0; i < datesNo && i < Model.Dates.Count; i++)
                {

                    if (i == 0)
                    {
                        <button type="button" id="date_@i" class="dateBtnActive" value="@Model.Dates[i]">@Model.Dates[i].Day/@Model.Dates[i].Month/@Model.Dates[i].Year </button>
                    }
                    else
                    {
                        <button type="button" id="date_@i" class="dateBtn" value="@Model.Dates[i]">@Model.Dates[i].Day/@Model.Dates[i].Month/@Model.Dates[i].Year</button>
                    }
                }

                <button type="button" id="next" class="navBtn">Next week</button>
            </div>
            <div id="history-body" class="d-flex flex-column align-items-center" style="padding-top:1rem">
                @foreach (var ex in @Model.FirstWorkout.Exercises)
                {
                    <div class="card my-3 d-flex flex-row" style="height: 100%; width: 45rem; border-radius: 1.5rem">
                        <div class="col-4 d-flex align-items-center justify-content-center text-center" style="background-color: #393E46; color: #efefef; border-radius: 1.5rem 0 0 1.5rem">
                            <h3 class="card-title">
                                @if (ex.IsPr)
                                {
                                    <i class="fa-solid fa-trophy"></i>
                                }
                                @ex.ExerciseName
                            </h3>

                        </div>
                        <div class="col-8 d-flex flex-column justify-content-center p-3" style="background-color: #d4f0a5; border-radius:0 1.5rem 1.5rem 0">
                            @foreach (var set in ex.Sets)
                            {
                                @if (set.Distance != null)
                                {
                                    <p class="listItem">
                                        @set.Distance m x @set.Duration mins
                                    </p>
                                }
                                @if (set.Reps != null)
                                {
                                    <p class="listItem">
                                        @set.Reps reps x @set.Weight kgs
                                    </p>
                                }
                            }
                        </div>
                    </div>
                }
            </div>
        </div>

        <div class="container tab" id="chartContainer" style="display:none">
            <canvas id="myChart_0"></canvas>
        </div>



        @section Scripts{
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script src="~/js/UserSplit/SeeHistory.js"></script>
        <script>
            WorkoutHistory();
            let datesList = [];
            let dateBtn = 0;
            let navparent = 0
            @for (var i = 0; i < @Model.Dates.Count; i++)
                {
                    @:datesList.push('@Model.Dates[i]')
                }
                    let coefList = []
                @for (var i = 0; i < @Model.CoefList.Count; i++)
                {
                    @:coefList.push('@Model.CoefList[i]')
                }
                    ChartBuilder(0, datesList, coefList, false);

                let indexj = '@index'
                let next = document.getElementById('next')
                let prev = document.getElementById('prev')

                if (indexj == '@pagesNo') {
                    next.disabled = true
                }
                next.onclick = e => {
                    if (indexj < '@pagesNo') {
                        prev.disabled = false;

                        ++indexj;

                        if (indexj == '@pagesNo') {
                            e.currentTarget.disabled = true
                        }

                        ClearDates();

                        let start = parseInt('@datesNo')
                        let splicedArray = datesList.slice(start * indexj, start * (indexj + 1))
                        let id = '@Model.WorkoutId'
                        CreateDates(splicedArray, indexj, start, id);

                        let firstEl = document.getElementById(`date_${indexj * start}`)
                        firstEl.classList.remove('dateBtn')
                        firstEl.classList.add('dateBtnActive')

                        let queryString = `?WorkoutId=@Model.WorkoutId&Date=${firstEl.value}`

                        $.ajax({
                            type: "get",
                            url: `@Url.Action("GetHistory", "UserSplit")${queryString}`,
                            success: (resp) => {
                                ClearDiv()
                                CreateHistory(resp);
                            },
                            error: (err) => {
                                console.log(err);
                            }
                        })
                    }
                    else {
                        e.currentTarget.disabled = true;
                    }
                }

                prev.onclick = e => {
                    if (indexj > 0) {
                        next.disabled = false;

                        --indexj;

                        if (indexj == 0) {
                            e.currentTarget.disabled = true
                        }

                        ClearDates();
                        let start = parseInt('@datesNo')
                        let splicedArray = datesList.slice(start * indexj, start * (indexj + 1))
                        let id = '@Model.WorkoutId'
                        CreateDates(splicedArray, indexj, start, id);

                        let firstEl = document.getElementById(`date_${indexj * start}`)
                        firstEl.classList.remove('dateBtn')
                        firstEl.classList.add('dateBtnActive')

                        let queryString = `?WorkoutId=@Model.WorkoutId&Date=${firstEl.value}`

                        $.ajax({
                            type: "get",
                            url: `@Url.Action("GetHistory", "UserSplit")${queryString}`,
                            success: (resp) => {
                                ClearDiv()
                                CreateHistory(resp);
                            },
                            error: (err) => {
                                console.log(err);
                            }
                        })
                    }
                    else {
                        e.currentTarget.disabled = true;
                    }
                }
            </script>
            <script>
                @for (var i = 0; i < datesNo; i++)
                {
                    <text>
                                                                try {
                        window['date_' + @i] = document.getElementById('date_@i');
                        window['date_' + @i].onclick = e => {
                            let nav = document.getElementById('dateNav');

                            for (let i = 1; i < nav.children.length - 1; i++) {
                                if (nav.children[i].nodeType == 1) {
                                    nav.children[i].classList.remove('dateBtnActive')
                                    nav.children[i].classList.add('dateBtn')
                                }
                            }

                            e.currentTarget.classList.remove('dateBtn')
                            e.currentTarget.classList.add('dateBtnActive')

                            let queryString = `?WorkoutId=@Model.WorkoutId&Date=${e.currentTarget.value}`

                            $.ajax({
                                type: "get",
                                url: `@Url.Action("GetHistory", "UserSplit")${queryString}`,
                                success: (resp) => {
                                    ClearDiv()
                                    CreateHistory(resp);
                                },
                                error: (err) => {
                                    console.log(err);
                                }
                            })
                        }
                    }
                    catch (error) {

                    }
                    </text>
                }
            </script>
    }
    }
</div>

